VPS SETUP GUIDE
================

Prerequisites:
- Ubuntu/Debian VPS
- Python 3.11 or higher
- PostgreSQL database
- Domain name (optional, can use IP)

INSTALLATION STEPS:

1. Update System
   sudo apt update && sudo apt upgrade -y

2. Install Required Packages
   sudo apt install python3 python3-pip python3-venv postgresql postgresql-contrib nginx -y

3. Setup PostgreSQL Database
   sudo -u postgres psql
   CREATE DATABASE telegram_bot;
   CREATE USER botuser WITH PASSWORD 'your_secure_password';
   GRANT ALL PRIVILEGES ON DATABASE telegram_bot TO botuser;
   \q

4. Clone/Upload Bot Code
   Upload your bot files to /opt/telegram-bot or your preferred directory

5. Create Virtual Environment
   cd /opt/telegram-bot
   python3 -m venv venv
   source venv/bin/activate

6. Install Dependencies
   pip install -r requirements.txt

7. Configure Environment Variables
   cp .env.example .env
   nano .env
   
   Update the following in .env:
   - BASE_URL=https://yourdomain.com (or http://your-vps-ip:5000)
   - DATABASE_URL=postgresql://botuser:your_secure_password@localhost:5432/telegram_bot
   - All Telegram credentials (already filled in .env.example)

8. Initialize Database
   The bot will automatically create tables on first run

9. Setup Systemd Service (Auto-start on boot)
   sudo cp systemd.service.example /etc/systemd/system/telegram-bot.service
   
   Edit the service file:
   sudo nano /etc/systemd/system/telegram-bot.service
   
   Update:
   - User=YOUR_USER (your linux username)
   - WorkingDirectory=/opt/telegram-bot
   - Environment="PATH=/opt/telegram-bot/venv/bin"
   - EnvironmentFile=/opt/telegram-bot/.env
   - ExecStart=/opt/telegram-bot/venv/bin/python -m bot

10. Enable and Start Service
    sudo systemctl daemon-reload
    sudo systemctl enable telegram-bot
    sudo systemctl start telegram-bot
    sudo systemctl status telegram-bot

11. Setup Nginx Reverse Proxy (Optional but Recommended)
    Create nginx config:
    sudo nano /etc/nginx/sites-available/telegram-bot
    
    Add:
    server {
        listen 80;
        server_name yourdomain.com;
        
        location / {
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    Enable site:
    sudo ln -s /etc/nginx/sites-available/telegram-bot /etc/nginx/sites-enabled/
    sudo nginx -t
    sudo systemctl restart nginx

12. Setup SSL with Let's Encrypt (Recommended)
    sudo apt install certbot python3-certbot-nginx -y
    sudo certbot --nginx -d yourdomain.com
    
    Update .env:
    BASE_URL=https://yourdomain.com

USEFUL COMMANDS:

View bot logs:
  sudo journalctl -u telegram-bot -f

Restart bot:
  sudo systemctl restart telegram-bot

Stop bot:
  sudo systemctl stop telegram-bot

Check bot status:
  sudo systemctl status telegram-bot

Manual run (for testing):
  cd /opt/telegram-bot
  source venv/bin/activate
  python -m bot

FIREWALL CONFIGURATION:

If using ufw firewall:
  sudo ufw allow 22/tcp    # SSH
  sudo ufw allow 80/tcp    # HTTP
  sudo ufw allow 443/tcp   # HTTPS
  sudo ufw enable

TROUBLESHOOTING:

1. If bot won't start, check logs:
   sudo journalctl -u telegram-bot -n 50

2. Database connection issues:
   - Verify PostgreSQL is running: sudo systemctl status postgresql
   - Check DATABASE_URL in .env
   - Test connection: psql -U botuser -d telegram_bot

3. Port already in use:
   - Check what's using port 5000: sudo lsof -i :5000
   - Change PORT in .env if needed

4. Permission denied errors:
   - Ensure proper ownership: sudo chown -R YOUR_USER:YOUR_USER /opt/telegram-bot
